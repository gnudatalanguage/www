# GDL on OSX
# INSTALLING GDL ON OSX

***
`Way 0`

GDL may be available, but check carefully the version, from:
- [Homebrew] look for homebrew-science, homebrew's gdl is another thing (Gnome Docking Library)!
- [Macports](https://www.macports.org/): known as gnudatalanguage, version 1.0.0-rc3 thanks @tenomoto -- version for M1 available
- [Fink](http://finkproject.org/pdb/package.php/gdl), thanks @Seb 

**those distributions may be well out-of-date by now**, as GDL is continuously improving (see what happened on our Github repo since)  

*** 
`Way 1`

0. de-activate any conda (miniconda, anaconda) related env. (still necessary? please report)
1. [install Homebrew using the one-liner command](https://docs.brew.sh/Installation) 
1. Using Brew, install the required libraries (cmake, g++ ...). 
1. Download the gdl code 
  - or clone this GithHub repository:  
    `git clone https://github.com/gnudatalanguage/gdl.git`  
    `git submodule update --init`  
4. run gdl/scripts/build_gdl.sh several times:
  - `build_gdl.sh prep` will install the required libraries. The script recompiles and install plplot, this is mandatory as the Homebrew plplot is not compiled with adequate options.
  - `build_gdl.sh configure` will prepare the make file for compilation in next step.
  - `build_gdl.sh build` will build gdl in `build`
  - `build_gdl.sh install` will install gdl in $HOME/gdl/install/bin and its dependencies.  
     At this point, one can run gdl in a terminal Ã  la unix, typing `$HOME/gdl/install/bin/gdl` . It is not an app, but it can be sufficient. 

In some cases (using widgets) it may be necessary to use gdl in form of an app:
  - `build_gdl.sh pack` creates an app
  - `build_gdl.sh prep_deploy` creates a dmg file, than can be mounted by the system, and the Apps it contain can be installed in Applications stay in the Dock and are started by clicking on it. At that stage, the gdl folder can be removed, but the GDL app will need some installed dependencies in homebrew that are not currently contained in the App (help welcome!).

GDL is built with wxWidgets graphic interface, but the X11 graphic windows are still there and can be called by a switch in the gdl command, see output of `gdl -h`. Of course to use X11 you need to independently install XQuartz.

This script is very frequently tested on OSX 10.14.6 and 11.3. Brew may have side effects (updates are frequent and quite long, may have conflict if machine with multi-users, projects asking for login/pass). Usually just reading the messages, using 'brew doctor' should be enough.

## Git issues

Since an upgrade of OSX, my `git pull` was not OK any more (and the ssh -X too ... stupid system). A effective solution for Git was : 
`git config --global url.https://github.com/.insteadOf git://github.com/`
(from [stackoverflow](https://stackoverflow.com/questions/72486457/fatal-unable-to-connect-to-github-com-github-com0-140-82-121-4-errno-unkno) )


## Installers
You can download the unstable [weekly DMG](https://github.com/gnudatalanguage/gdl/releases/download/weekly-release/gdl-macOS-x86_64-standard.dmg)** and use it. Some dependencies (auxiliary files for seldom-used external libraries) may not be copied to the DMG, please report in case of trouble.
